{
  "version": 3,
  "sources": ["../../../src/lib/supabase.ts"],
  "sourcesContent": ["import { createClient } from '@supabase/supabase-js';\nimport type { Database } from './database.types';\n\n// Vérification des variables d'environnement\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseKey) {\n  throw new Error('Variables d\\'environnement Supabase manquantes');\n}\n\n// Configuration du client avec retry et timeout\nexport const supabase = createClient<Database>(\n  supabaseUrl,\n  supabaseKey,\n  {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n      storage: window.localStorage,\n      flowType: 'pkce'\n    },\n    global: {\n      headers: {\n        'X-Client-Info': 'supabase-js-v2'\n      }\n    },\n    db: {\n      schema: 'public'\n    }\n  }\n);\n\n// Helper pour vérifier la connexion\nexport async function checkSupabaseConnection() {\n  try {\n    // Test simple de connexion sans authentification\n    const { data, error } = await supabase\n      .from('sales_reps')\n      .select('count', { count: 'exact', head: true });\n    \n    if (error) {\n      console.error('Supabase connection error:', error);\n      // Si c'est une erreur d'autorisation, la connexion fonctionne mais l'utilisateur n'est pas connecté\n      if (error.code === 'PGRST301' || error.code === '42501') {\n        console.log('Connection OK, but authentication required');\n        return true;\n      }\n      return false;\n    }\n    \n    console.log('Supabase connection successful');\n    return true;\n  } catch (error) {\n    console.warn('Connection check failed:', error);\n    return false;\n  }\n}"],
  "mappings": ";;;;;;;AAIA,IAAM,cAAc,YAAY,IAAI;AACpC,IAAM,cAAc,YAAY,IAAI;AAEpC,IAAI,CAAC,eAAe,CAAC,aAAa;AAChC,QAAM,IAAI,MAAM,+CAAgD;AAClE;AAGO,IAAM,WAAW;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,IACE,MAAM;AAAA,MACJ,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,SAAS,OAAO;AAAA,MAChB,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,SAAS;AAAA,QACP,iBAAiB;AAAA,MACnB;AAAA,IACF;AAAA,IACA,IAAI;AAAA,MACF,QAAQ;AAAA,IACV;AAAA,EACF;AACF;AAGA,eAAsB,0BAA0B;AAC9C,MAAI;AAEF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,YAAY,EACjB,OAAO,SAAS,EAAE,OAAO,SAAS,MAAM,KAAK,CAAC;AAEjD,QAAI,OAAO;AACT,cAAQ,MAAM,8BAA8B,KAAK;AAEjD,UAAI,MAAM,SAAS,cAAc,MAAM,SAAS,SAAS;AACvD,gBAAQ,IAAI,4CAA4C;AACxD,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,IAAI,gCAAgC;AAC5C,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,KAAK,4BAA4B,KAAK;AAC9C,WAAO;AAAA,EACT;AACF;",
  "names": []
}
